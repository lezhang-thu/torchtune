# Config for single device full finetuning in full_finetune_single_device.py
# using a Qwen2 0.5B
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download Qwen/Qwen2-0.5B-Instruct --output-dir /tmp/Qwen2-0.5B-Instruct --ignore-patterns None
#
# To launch on a single device, run the following command from root:
#   tune run full_finetune_single_device --config qwen2/0.5B_full_single_device
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run full_finetune_single_device --config qwen2/0.5B_full_single_device checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works only for training on single device.

# Tokenizer
tokenizer:
  _component_: torchtune.models.qwen2.x_qwen2_tokenizer
  max_seq_len: 83900 

# Dataset
dataset:
  _component_: torchtune.datasets.bio_dataset
test_dataset:
  _component_: torchtune.datasets.test_bio_dataset
seed: null
shuffle: True

# Model Arguments
model:
  _component_: torchtune.models.qwen2.qwen2_x

resume_from_checkpoint: null
#resume_from_checkpoint: biology-research/model-8-26/biology-qwen2-epoch_100.pt

# Fine-tuning arguments
# debug
#batch_size: 2
batch_size: 1
#epochs: 1
epochs: 30
optimizer:
  _component_: torch.optim.AdamW
  #lr: 2e-5
  lr: 1e-4

loss:
  _component_: torch.nn.CrossEntropyLoss
optimizer_in_bwd: False

max_steps_per_epoch: null
gradient_accumulation_steps: 8
compile: False

# Training environment
device: cuda

# Memory management
enable_activation_checkpointing: True
#enable_activation_checkpointing: False 

# Reduced precision
dtype: bf16

# Logging
metric_logger:
  _component_: torchtune.utils.metric_logging.DiskLogger
  log_dir: ${output_dir}
#output_dir: /tmp/Qwen2-0.5B-Instruct-finetune
output_dir: biology-research/model-8-26
log_every_n_steps: 1
log_peak_memory_stats: False
